# The parent line must be the first non-comment line in the file
# This line defines the product name and version
parent artdaq  
defaultqual    e20:s106

# These optional lines define the installed directories where
# headers, libraries, and executables will be found
# Use them only if your product does not conform to the defaults
# Format: directory_type directory_path directory_name
# The only recognized values of the first field are incdir, libdir, and bindir
# The only recognized values of the second field are product_dir and fq_dir
# The third field is not constrained
# The examples here reflect the defaults
incdir      product_dir include
libdir      fq_dir      lib
bindir      fq_dir      bin

#
product			version		optional
art_root_io		v1_08_01	s109
art_root_io		v1_08_00	s108
artdaq_core 		v3_07_01
artdaq_utilities        v1_06_01
xmlrpc_c		v1_51_06
swig            	v4_0_2		-       optional
nodejs          	v10_15_0       	-       optional
artdaq_mfextensions     v1_06_01        -       optional
artdaq_epics_plugin     v1_03_01        -       optional
artdaq_ganglia_plugin	v1_03_01        -       optional
artdaq_pcp_mmv_plugin   v1_01_01        -       optional
cetbuildtools		v8_08_02	-	only_for_build
end_product_list

# See https://cdcvs.fnal.gov/redmine/projects/cet-is-public/wiki/AboutQualifiers for information about the qualifiers used
# -nq- means there is no qualifier
# a "-" means the dependent product is not required by the parent and will not be setup
qualifier	  	art_root_io	artdaq_core	  artdaq_utilities	xmlrpc_c	artdaq_mfextensions	artdaq_epics_plugin	artdaq_ganglia_plugin artdaq_pcp_mmv_plugin	swig        nodejs
c7:s109:debug	  	c7:debug	c7:s109:debug  	  c7:s109:debug		c7:debug	c7:s109:debug	   	c7:s109:debug       	c7:s109:debug	      c7:s109:debug       	c7:debug    -nq- 
c7:s109:prof	   	c7:prof		c7:s109:prof	  c7:s109:prof		c7:prof		c7:s109:prof	   	c7:s109:prof		c7:s109:prof	      c7:s109:prof		c7:prof     -nq- 
e20:s109:debug	  	e20:debug	e20:s109:debug 	  e20:s109:debug	e20:debug	e20:s109:debug	   	e20:s109:debug      	e20:s109:debug	      e20:s109:debug		e20:debug   -nq- 
e20:s109:prof	   	e20:prof	e20:s109:prof  	  e20:s109:prof		e20:prof	e20:s109:prof	   	e20:s109:prof		e20:s109:prof	      e20:s109:prof		e20:prof    -nq- 
e19:s109:debug	  	e19:debug	e19:s109:debug 	  e19:s109:debug	e19:debug	e19:s109:debug	   	e19:s109:debug      	e19:s109:debug	      e19:s109:debug		e19:debug   -nq- 
e19:s109:prof	   	e19:prof	e19:s109:prof  	  e19:s109:prof		e19:prof	e19:s109:prof	   	e19:s109:prof		e19:s109:prof	      e19:s109:prof		e19:prof    -nq- 

c7:s108:debug	  	c7:debug	c7:s108:debug  	  c7:s108:debug		c7:debug	c7:s108:debug	   	c7:s108:debug       	c7:s108:debug	      c7:s108:debug       	c7:debug    -nq- 
c7:s108:prof	   	c7:prof		c7:s108:prof	  c7:s108:prof		c7:prof		c7:s108:prof	   	c7:s108:prof		c7:s108:prof	      c7:s108:prof		c7:prof     -nq- 
e20:s108:debug	  	e20:debug	e20:s108:debug 	  e20:s108:debug	e20:debug	e20:s108:debug	   	e20:s108:debug      	e20:s108:debug	      e20:s108:debug		e20:debug   -nq- 
e20:s108:prof	   	e20:prof	e20:s108:prof  	  e20:s108:prof		e20:prof	e20:s108:prof	   	e20:s108:prof		e20:s108:prof	      e20:s108:prof		e20:prof    -nq- 
e19:s108:debug	  	e19:debug	e19:s108:debug 	  e19:s108:debug	e19:debug	e19:s108:debug	   	e19:s108:debug      	e19:s108:debug	      e19:s108:debug		e19:debug   -nq- 
e19:s108:prof	   	e19:prof	e19:s108:prof  	  e19:s108:prof		e19:prof	e19:s108:prof	   	e19:s108:prof		e19:s108:prof	      e19:s108:prof		e19:prof    -nq- 

end_qualifier_list

table_fragment_begin
 pathPrepend(PYTHONPATH, ${ARTDAQ_LIB})
table_fragment_end

# Preserve tabs and formatting in emacs and vi / vim:

### Local Variables:
### tab-width: 8
### End:

# vi:set ts=8 noexpandtab:
